{"version":3,"sources":["components/Nav/nav.js","components/Wrapper/wrapper.js","components/Card/card.js","components/Main/main.js","components/Footer/footer.js","App.js","index.js"],"names":["NavBar","Styled","div","_templateObject","Nav","props","react_default","a","createElement","navmessage","score","topscore","WrapperDiv","wrapper_templateObject","Wrapper","children","CardDiv","card_templateObject","Card","className","onClick","clickCount","id","alt","name","src","image","MainDiv","main_templateObject","Main","FooterDiv","footer_templateObject","Footer","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","alert","concat","find","o","i","sort","Math","random","_this2","nav","main","wrapper","map","Card_card","key","footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"upBAGA,IAQMA,EAASC,IAAOC,IAAVC,KAcGC,EAtBH,SAAAC,GAAK,OACbC,EAAAC,EAAAC,cAACR,EAAD,KACIM,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,UAAKH,EAAMI,YACXH,EAAAC,EAAAC,cAAA,oBAAYH,EAAMK,MAAlB,iBAAuCL,EAAMM,kQCJrD,IAEMC,EAAaX,IAAOC,IAAVW,KAWDC,EAbC,SAAAT,GAAK,OAAIC,EAAAC,EAAAC,cAACI,EAAD,KAAaP,EAAMU,q0BCA5C,IAOMC,EAAUf,IAAOC,IAAVe,KAgCEC,EAvCF,SAAAb,GAAK,OACdC,EAAAC,EAAAC,cAACQ,EAAD,CAASG,UAAU,OAAOC,QAAS,kBAAMf,EAAMgB,WAAWhB,EAAMiB,MAExDhB,EAAAC,EAAAC,cAAA,OAAKe,IAAMlB,EAAMmB,KAAMC,IAAKpB,EAAMqB,siBCH9C,IAQMC,EAAU1B,IAAOC,IAAV0B,KAmBEC,EA3BF,kBACTvB,EAAAC,EAAAC,cAACmB,EAAD,KACIrB,EAAAC,EAAAC,cAAA,sFACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,4bCJR,IAMMsB,EAAY7B,IAAOC,IAAV6B,KAeAC,EArBA,kBACX1B,EAAAC,EAAAC,cAACsB,EAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKW,UAAU,UAAf,+BCwEOc,6MAlEbC,MAAQ,CACNC,QACAzB,MAAO,EACPC,SAAU,EACVF,WAAY,MAGd2B,SAAW,WAaT,OAZGC,EAAKH,MAAMxB,MAAQ2B,EAAKH,MAAMvB,UAC/B0B,EAAKC,SAAS,CAAC3B,SAAU0B,EAAKH,MAAMxB,OAAQ,WAC1C6B,QAAQC,IAAIC,KAAKP,MAAMvB,YAI3B0B,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACvBA,EAAKC,MAAQ,IAGfC,MAAK,sBAAAC,OAAuBT,EAAKH,MAAMxB,QACvC2B,EAAKC,SAAS,CAAC5B,MAAM,KACd,KAKTW,WAAa,SAAAC,GAEXe,EAAKH,MAAMC,MAAMY,KAAK,SAACC,EAAGC,GACxB,GAAID,EAAE1B,KAAMA,EAAI,CACd,GAAuB,IAAnBa,EAAMc,GAAGL,MASX,OARAT,EAAMc,GAAGL,MAAQT,EAAMc,GAAGL,MAAQ,EAClCP,EAAKC,SAAS,CAAC5B,MAAO2B,EAAKH,MAAMxB,MAAO,GAAI,WAC1C6B,QAAQC,IAAIC,KAAKP,MAAMxB,SAKzB2B,EAAKH,MAAMC,MAAMe,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EACDf,EAAKD,uFAMV,IAAAiB,EAAAZ,KACP,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8C,EAAD,CAAK5C,MAAO+B,KAAKP,MAAMxB,MAAOC,SAAU8B,KAAKP,MAAMvB,WACnDL,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,KACCf,KAAKP,MAAMC,MAAMsB,IAAI,SAAAd,GAAI,OACxBrC,EAAAC,EAAAC,cAACkD,EAAD,CACErC,WAAYgC,EAAKhC,WACjBC,GAAIqB,EAAKrB,GACTqC,IAAKhB,EAAKrB,GACVI,MAAOiB,EAAKjB,WAGhBpB,EAAAC,EAAAC,cAACoD,EAAD,cA7DUC,aCJlBC,IAASC,OAAOzD,EAAAC,EAAAC,cAACwD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.d9bd2b57.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Nav = props => (\r\n    <NavBar>\r\n        <h1>Clicky Card Game</h1>\r\n        <h3>{props.navmessage}</h3>\r\n        <h1>Score: {props.score} | Top Score: {props.topscore}</h1>\r\n    </NavBar>\r\n);\r\n\r\nconst NavBar = Styled.div `\r\n    width: 100%;\r\n    position:sticky;\r\n    top:0;\r\n    display:grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    justify-items: center;\r\n    background-color: #97340A;\r\n    box-shadow:0 14px 28px rgba(0,0,0,.25), 0 10px 10px rgba(0,0,0,.22);\r\n    color:white;\r\n    margin-bottom: 0;\r\n    // font-family: 'Uncial Antiqua', cursive;\r\n    `\r\n    \r\nexport default Nav;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Wrapper = props => <WrapperDiv>{props.children}</WrapperDiv>\r\n\r\nconst WrapperDiv = Styled.div `\r\n    display: grid;\r\n    grid-gap: 20px;\r\n    grid-template-columns: repeat(4, 1fr);\r\n    max-width: 75%;\r\n    margin:auto;\r\n    margin-top:50px;\r\n    margin-bottom:50px;\r\n    `    \r\n\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Card = props => (\r\n    <CardDiv className='grow' onClick={() => props.clickCount(props.id)}>\r\n        \r\n            <img alt= {props.name} src={props.image} />\r\n    </CardDiv>\r\n);\r\n\r\nconst CardDiv = Styled.div `\r\n        width: 150px;\r\n        height:auto;\r\n        margin:auto;\r\n        padding: 20px;\r\n        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n        transition: 0.3s;\r\n        background-color: whitesmoke;\r\n        \r\n        &:hover {\r\n            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\r\n        }\r\n        .grow{\r\n            transition: .5s ease;\r\n          }\r\n            \r\n        &:hover{\r\n            -webkit-transform: scale(1.07);\r\n            -ms-transform: scale(1.07);\r\n            transform: scale(1.07);\r\n            transition: .5s ease;\r\n        }\r\n        \r\n        img{\r\n            width:150px;\r\n            height:150px;\r\n            margin:auto;\r\n            image-rendering:pixelated;\r\n            vertical-align:middle;\r\n        }`;\r\n\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Main = () => (\r\n    <MainDiv>\r\n        <h2>One click on an image will earn you a point.   Get all 12 and you Win!!!</h2>\r\n        <h2>Careful, if you click on any more than once and it's Game Over!</h2>\r\n        <h1>Click an image to begin the Game</h1>\r\n    </MainDiv>\r\n);\r\n\r\nconst MainDiv = Styled.div `\r\n        margin-top: 0;\r\n        background-image: url(bg-img.png);\r\n        background-attachment: fixed;\r\n        background-position: center bottom;\r\n        min-height:300px;\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n          \r\n        h1, h2 {\r\n            margin: 5;\r\n            color: white;\r\n            text-align:center;\r\n            text-shadow: -1px 1px 5px rgba(100, 100, 100, 1);\r\n            \r\n        }`;\r\n\r\n\r\nexport default Main;","import React from \"react\";\r\nimport Styled from \"styled-components\";\r\n\r\nconst Footer = () => (\r\n    <FooterDiv>\r\n        <div className=\"bottom\">PlipandFirt Design</div>\r\n    </FooterDiv>\r\n);\r\n\r\nconst FooterDiv = Styled.div `\r\n        width: 100%;\r\n        height:5vw;\r\n        bottom:0;\r\n        margin-bottom:0;\r\n        margin-top: 25px;\r\n        text-align:center;\r\n        background-color: #97340A;\r\n        color: white;\r\n        overflow:auto;\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-direction: column;\r\n        `\r\n        \r\nexport default Footer;","import React, { Component } from \"react\";\nimport Nav from \"./components/Nav/nav\";\nimport Wrapper from \"./components/Wrapper/wrapper\";\nimport Card from \"./components/Card/card\";\nimport Main from \"./components/Main/main\";\nimport Footer from \"./components/Footer/footer\";\nimport cards from \"./cards.json\";\n\n\nclass App extends Component {\n\n  state = {\n    cards,\n    score: 0,\n    topscore: 0,\n    navmessage: \"\"\n  }\n\n  gameOver = () => {\n    if(this.state.score > this.state.topscore) {\n      this.setState({topscore: this.state.score}, function () {\n        console.log(this.state.topscore);\n      });\n    }\n\n    this.state.cards.forEach(card => {\n      card.count = 0;\n    });\n\n    alert(`Game Over \\nScore: ${this.state.score}`);\n    this.setState({score:0});\n    return true;\n  }\n\n  // need to reset the game without refeshing the screen\n\n  clickCount = id => {\n    // eslint-disable-next-line\n    this.state.cards.find((o, i) => {\n      if (o.id ===id) {\n        if (cards[i].count === 0) {\n          cards[i].count = cards[i].count + 1;\n          this.setState({score: this.state.score +1}, function() {\n            console.log(this.state.score);\n          });\n\n          //need a you win when 12 is reached\n\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {this.gameOver()}\n      }\n    });\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topscore={this.state.topscore} />\n        <Main />\n        <Wrapper>\n        {this.state.cards.map(card => (\n          <Card\n            clickCount={this.clickCount}\n            id={card.id}\n            key={card.id}\n            image={card.image}\n          />))}\n        </Wrapper>\n        <Footer/>\n      </div>\n\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}